{"version":3,"sources":["reportWebVitals.js","componets/SearchBox.js","componets/Card.js","componets/CardList.js","componets/Scroll.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Card","name","id","email","alt","src","CardList","robots","map","user","i","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","response","json","users","filteredRobots","this","filter","toLowerCase","includes","length","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCOCQ,EAZG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACI,qBAAKC,UAAU,MAAf,SACI,uBACAA,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCKPK,EAZF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,GAAGC,EAAW,EAAXA,MACrB,OACE,sBAAKP,UAAU,mDAAf,UACE,qBAAKQ,IAAI,SAASC,IAAG,+BAA2BH,EAA3B,OACrB,gCACE,6BAAKD,IACL,8BAAIE,EAAJ,cCgBOG,EApBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEf,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAKC,GACb,OACI,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdD,KAAMM,EAAOG,GAAGT,KAChBE,MAAOI,EAAOG,GAAGP,OAHZO,SCFdC,G,MARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAO,kBAAmBC,OAAO,SAAnE,SACKJ,EAAMK,aC+CJC,E,kDA7CX,aACC,IAAD,8BACI,gBAcJC,eAAiB,SAACC,GAEd,EAAKC,SAAS,CAAC3B,YAAY0B,EAAME,OAAOC,SAfxC,EAAKC,MAAM,CACPjB,OAAO,GACPb,YAAY,IAJpB,E,qDAQA,WACC,IAAD,OACI+B,MAAM,8CACDtC,MAAK,SAAAuC,GAAQ,OAAGA,EAASC,UACzBxC,MAAK,SAAAyC,GAAK,OAAI,EAAKP,SAAS,CAACd,OAAQqB,S,oBAS9C,WACC,IAAD,OACUC,EAAeC,KAAKN,MAAMjB,OAAOwB,QAAO,SAACxB,GAC3C,OAAOA,EAAON,KAAK+B,cAAcC,SAAS,EAAKT,MAAM9B,YAAYsC,kBAErE,OAA8B,IAA3BF,KAAKN,MAAMjB,OAAO2B,OAEV,yCAIH,sBAAKtC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWD,aAAcmC,KAAKX,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUZ,OAAQsB,a,GAtCxBM,aCElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM1BxD,M","file":"static/js/main.cf760c48.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { React } from \"react\";\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n            className='pa3 ba b--green bg-lightest-blue'\r\n            type='search' \r\n            placeholder='search robots' \r\n            onChange={searchChange}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\n\nconst Card = ({name,id,email}) => {\n  return (\n    <div className='bg-light-green dib br3 pa3 ma3 grow bw2 shadow-5'>\n      <img alt='robots' src= {`https://robohash.org/${id}}`} /> \n      <div>\n        <h2>{name}</h2>\n        <p>{email} </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({robots}) => {\r\n     \r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user,i) => {\r\n                    return(\r\n                        <Card\r\n                        key={i} \r\n                        id={robots[i].id} \r\n                        name={robots[i].name} \r\n                        email={robots[i].email}\r\n                        />\r\n                    );\r\n                })   \r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n    return (\r\n        <div style={{ overflow: 'scroll', border:'1px solid black', height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React,{ Component } from \"react\";\r\nimport SearchBox from \"../componets/SearchBox\";\r\nimport CardList from \"../componets/CardList\";\r\nimport './App.css';\r\nimport Scroll from '../componets/Scroll';\r\n\r\nclass App extends Component {\r\n    constructor()\r\n    {\r\n        super()\r\n        this.state={\r\n            robots:[],\r\n            searchfield:''\r\n        }\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response=> response.json())\r\n            .then(users => this.setState({robots: users}));\r\n    }\r\n\r\n    onSearchChange = (event) =>\r\n    {\r\n        this.setState({searchfield:event.target.value})\r\n        \r\n       \r\n    }\r\n    render()\r\n    {\r\n        const filteredRobots=this.state.robots.filter((robots)=>{\r\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        })\r\n        if(this.state.robots.length===0)\r\n        {\r\n            return <h1>Loading</h1>\r\n        }\r\n        else{\r\n            return (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>Robo Friends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <CardList robots={filteredRobots}/>\r\n                    </Scroll>\r\n                </div>\r\n                );\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './containers/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}